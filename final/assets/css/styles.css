@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;800&display=swap");

:root {
    --light-color: #d8d8d8;
    --dark-color: #060606;
}

*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html {
    font-size: 62.5%;
}

body {
    background-color: var(--dark-color);
    font-family: "Poppins", sans-serif;
    font-size: 1.6rem;
    line-height: 1.5;
    color: var(--light-color);
}

a {
    text-decoration: none;
    color: inherit;
}

ul {
    list-style: none;
}

img {
    display: block;
    max-width: 100%;
}

.showcase {
    position: relative;
    height: 100vh;
    padding: 2rem;
    text-align: center;
    isolation: isolate;
}

.showcase::before {
    content: "";
    position: fixed;
    top: -150%;
    left: -100%;
    z-index: -1;
    width: 350%;
    height: 350%;
    background-image: url("../images/grain.png");
    opacity: 0.25;
}

.logo-image {
    width: 3.5rem;
    margin-inline: auto;
}

.navbar {
    padding-block: 1.5rem;
}

.navbar ul {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1rem 2rem;
}

/* Utility classes */
.sm-hidden {
    display: none;
}

.overflow-hidden {
    overflow: hidden;
}
/* Utility classes end*/

.title {
    font-size: 11vw;
    font-weight: 700;
    text-transform: uppercase;
}

.subtitle {
    font-size: 4vw;
    padding-bottom: 2rem;
}

.description {
    padding-block: 3rem;
}

.cta {
    display: block;
    padding-bottom: 1rem;
}

@media screen and (min-width: 64em) {
    .showcase,
    .showcase > *:not(.link) {
        padding: 0;
    }

    .showcase {
        text-align: left;
        display: grid;
        grid-template-columns: 10rem 12rem 10rem 1fr 1fr;
        grid-template-rows: 8rem min-content min-content 1fr 5rem;
        grid-template-areas:
            "logo ... ... navbar dashboard"
            "... ... ... title title"
            "... ... ... ... subtitle"
            "... newsletter ... description cta"
            "... ... year name ...";
    }

    .logo {
        grid-area: logo;
        margin: auto;
    }

    .navbar {
        grid-area: navbar;
    }

    .link:hover {
        text-decoration: underline;
    }

    .link-dashboard {
        grid-area: dashboard;
    }

    .title {
        grid-area: title;
        line-height: 1;
        pointer-events: none;
    }

    .subtitle {
        grid-area: subtitle;
        line-height: 1;
        margin-top: 0.5rem;
    }

    .vertical-text {
        grid-area: newsletter;
        font-size: 3vw;
        text-transform: uppercase;
        justify-self: end;
    }

    .vertical-text-inner {
        writing-mode: vertical-lr;
        transform: rotate(180deg);
    }

    .description {
        grid-area: description;
        max-width: 80%;
    }

    .vertical-center {
        display: flex;
        align-self: center;
    }

    .cta {
        grid-area: cta;
        align-self: center;
        text-align: center;
        font-size: 5vw;
        line-height: 8rem;
        font-weight: 700;
        text-transform: uppercase;
    }

    .copyright {
        display: inline-flex;
        align-items: center;
    }

    .copyright-year {
        grid-area: year;
    }

    .copyright-name {
        grid-area: name;
    }

    /* Utility classes */
    .sm-hidden {
        display: block;
    }
    .xl-hidden {
        display: none;
    }

    .line {
        position: relative;
    }

    .line::before {
        content: "";
        position: absolute;
        background-color: rgba(82, 77, 73, 0.38);
    }

    .line-vertical::before {
        top: -250vh;
        left: 0;
        width: 1px;
        height: 500vh;
    }

    .line-horizontal::before {
        top: 0;
        left: -250vw;
        width: 500vw;
        height: 1px;
    }
    /* Utility classes end*/

    .shape {
        position: absolute;
        bottom: 10vh;
        left: 25vw;
        z-index: -1;
        width: 10vw;
        opacity: 0.25;
        user-select: none;
        -webkit-user-drag: none;
        transform-origin: bottom left;
    }

    .shape-md {
        top: 2.5vh;
        left: 2.5vw;
        width: 15vw;
        transform-origin: top;
    }

    .shape-lg {
        top: 25vh;
        right: -10vw;
        left: auto;
        width: 80vw;
        transform-origin: bottom right;
    }

    /* Cursor tracker */
    .tracker {
        position: fixed;
        z-index: 9999;
        transform: translate(-50%, -50%);
        width: 4rem;
        height: 4rem;
        border-radius: 50%;
        border: 1px solid #d8d8d8;
        pointer-events: none;
        mix-blend-mode: difference;
        opacity: 0;
        transition: top 0.075s, left 0.075s, opacity 0.5s;
    }
}

@media (prefers-reduced-motion: no-preference) {
    .showcase::before {
        animation: grain 5s steps(10) infinite;
    }

    .has-in-common {
        animation-duration: 1s;
        animation-fill-mode: forwards;
        animation-timing-function: cubic-bezier(0.37, 0, 0.63, 1);
        animation-delay: var(--delay);
    }

    .to-right,
    .to-bottom {
        display: block;
        opacity: 0;
    }

    .to-right {
        animation-name: toRight;
    }

    .to-bottom {
        animation-name: toBottom;
    }

    .shape {
        scale: 0;
        animation-name: scaleIn;
        animation-duration: 0.25s;
        transition: translate 0.25s;
    }

    .scale-rotate {
        scale: 0;
        animation-name: scaleRotate;
        animation-duration: 0.5s;
    }
    /* Keyframes */
    @keyframes grain {
        0%,
        100% {
            transform: translate(0);
        }
        10% {
            transform: translate(-5%, -10%);
        }
        20% {
            transform: translate(-15%, 5%);
        }
        30% {
            transform: translate(7%, -25%);
        }
        40% {
            transform: translate(-5%, 25%);
        }
        50% {
            transform: translate(-15%, 5%);
        }
        60% {
            transform: translate(15%);
        }
        70% {
            transform: translateY(15%);
        }
        80% {
            transform: translate(3%, 35%);
        }
        90% {
            transform: translate(-10%, 10%);
        }
    }

    @keyframes toRight {
        from {
            opacity: 1;
            transform: translateX(-100%);
        }
        to {
            opacity: 1;
            transform: none;
        }
    }

    @keyframes toBottom {
        from {
            opacity: 1;
            transform: translateY(-100%);
        }
        to {
            opacity: 1;
            transform: none;
        }
    }

    @keyframes scaleIn {
        from {
            scale: 0;
        }
        to {
            scale: 1;
        }
    }

    @keyframes scaleRotate {
        from {
            scale: 0;
            rotate: 60deg;
        }
        to {
            scale: 1;
            rotate: 0deg;
        }
    }
}
